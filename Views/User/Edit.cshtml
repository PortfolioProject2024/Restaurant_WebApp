@model Restaurant_WebApp.Models.ViewModels.UserWithRolesVM

@{
    ViewData["Title"] = "Edit User";
    Layout = "/Views/CustomeLayout/_AdminLayout.cshtml";
}


<h2 style="color: purple; margin-left: 30px;">Edit User</h2>

<form asp-action="Edit" method="post" class="needs-validation" novalidate style="color: orange; margin-left: 30px; width: 400px; max-width:600px">
    <div class="mb-3">
        <label for="FirstName" class="form-label">First Name</label>
        <input asp-for="FirstName" class="form-control" id="FirstName" required>
        <div class="invalid-feedback">
            Please provide a first name.
        </div>
    </div>
    <div class="mb-3">
        <label for="LastName" class="form-label">Last Name</label>
        <input asp-for="LastName" class="form-control" id="LastName" required>
        <div class="invalid-feedback">
            Please provide a last name.
        </div>
    </div>
    <div class="mb-3">
        <label for="Email" class="form-label">Email</label>
        <input asp-for="Email" class="form-control" id="Email" required>
        <div class="invalid-feedback">
            Please provide a valid email address.
        </div>
    </div>

    <div class="mb-3">
        <label for="Roles" class="form-label">Current Roles</label>
        @if (Model.Roles.Any())
        {
            <ul class="list-unstyled">
                @foreach (var role in Model.Roles)
                {
                    <li>@role.ToUpper()</li>
                }
            </ul>
        }
        else
        {
            <div class="alert alert-warning" role="alert">
                No roles assigned.
            </div>
        }
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    <script>
        // Example JavaScript for form validation using Bootstrap 5
        // Prevent form submission if fields are invalid
        (function () {
            'use strict';
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation');
            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
        })();
    </script>
}

